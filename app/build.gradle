apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "com.dleibovych.epictale"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 6
        versionName "0.0.6_beta"
        resValue "string", "tray__authority", "${applicationId}.tray"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            storeFile file("../key/release.keystore")
            storePassword project.hasProperty('THE_TALE_RELEASE_KEYSTORE_PASSWORD') ? THE_TALE_RELEASE_KEYSTORE_PASSWORD : System.getenv('THE_TALE_RELEASE_KEYSTORE_PASSWORD')
            keyAlias project.hasProperty('THE_TALE_RELEASE_KEY_ALIAS') ? THE_TALE_RELEASE_KEY_ALIAS : System.getenv('THE_TALE_RELEASE_KEY_ALIAS')
            keyPassword project.hasProperty('THE_TALE_RELEASE_KEY_PASSWORD') ? THE_TALE_RELEASE_KEY_PASSWORD : System.getenv('THE_TALE_RELEASE_KEY_PASSWORD')
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
        debug {
        }
    }

    dexOptions {
        preDexLibraries true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
        checkAllWarnings true
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

dependencies {
    // latest versions of libraries as of 11.02.2018
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.google.firebase:firebase-core:12.0.1'
    implementation 'com.google.firebase:firebase-messaging:12.0.1'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.1'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.9.1'
    implementation 'com.squareup.okio:okio:1.13.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'net.grandcentrix.tray:tray:0.11.1'
    implementation project(':android-support-v4-preferencefragment') // https://github.com/kolavar/android-support-v4-preferencefragment
    implementation 'com.github.chrisbanes:PhotoView:2.0.0' // https://github.com/chrisbanes/PhotoView
    implementation 'org.jsoup:jsoup:1.11.2' // https://github.com/jhy/jsoup
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.21"

    implementation project(':core')
    implementation project(':api')
    implementation project(':auth')

    implementation 'com.google.dagger:dagger-android:2.15'
    implementation 'com.google.dagger:dagger-android-support:2.15'
    kapt 'com.google.dagger:dagger-android-processor:2.15'
    kapt "com.google.dagger:dagger-compiler:2.15"

    implementation 'com.github.bumptech.glide:glide:4.7.1'
    kapt 'com.github.bumptech.glide:compiler:4.7.1'
}

android.applicationVariants.all { variant ->
    variant.getOutputs().all { output ->
        if (outputFileName != null && output.outputFileName.endsWith('.apk')) {
            outputFileName = "${variant.name}-${variant.versionName}.apk"
        }
    }
}

apply plugin: 'com.google.gms.google-services'
repositories {
    mavenCentral()
}
